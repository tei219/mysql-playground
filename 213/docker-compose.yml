services:

  mysql80-node1:
    image: mysql:8.0
    hostname: node1
    volumes:
      - ./etc/mysql80-my.cnf:/etc/my.cnf
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    command: --server_id=1 --gtid_mode=on --enforce_gtid_consistency=on --disabled_storage_engines="MyISAM,BLACKHOLE,FEDERATED,ARCHIVE,MEMORY" --default-authentication-plugin=mysql_native_password --plugin-load=group_replication.so --relay-log-recovery=on --loose-group-replication-start-on-boot=off --loose-group-replication-group-name=aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee --loose-group-replication-local-address=node1:33061 --loose-group-replication-group-seeds=node1:33061,node2:33061,node3:33061 --loose-group-replication-single-primary-mode=on --loose-group-replication-enforce-update-everywhere-checks=off --loose-group_replication_bootstrap_group=off
    healthcheck:
      test: [ "CMD-SHELL", "mysql -u root -sNe \"select 1;\"" ]
      start_period: 20s
      retries: 10
      interval: 10s
      timeout: 10s

  mysql80-node2:
    image: mysql:8.0
    hostname: node2
    volumes:
      - ./etc/mysql80-my.cnf:/etc/my.cnf
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    command: --server_id=2 --gtid_mode=on --enforce_gtid_consistency=on --disabled_storage_engines="MyISAM,BLACKHOLE,FEDERATED,ARCHIVE,MEMORY" --default-authentication-plugin=mysql_native_password --plugin-load=group_replication.so --relay-log-recovery=on --loose-group-replication-start-on-boot=off --loose-group-replication-group-name=aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee --loose-group-replication-local-address=node2:33061 --loose-group-replication-group-seeds=node1:33061,node2:33061,node3:33061 --loose-group-replication-single-primary-mode=on --loose-group-replication-enforce-update-everywhere-checks=off --loose-group_replication_bootstrap_group=off
    depends_on:
      mysql80-node1:
        condition: service_healthy

  mysql80-node3:
    image: mysql:8.0
    hostname: node3
    volumes:
      - ./etc/mysql80-my.cnf:/etc/my.cnf
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    command: --server_id=3 --gtid_mode=on --enforce_gtid_consistency=on --disabled_storage_engines="MyISAM,BLACKHOLE,FEDERATED,ARCHIVE,MEMORY" --default-authentication-plugin=mysql_native_password --plugin-load=group_replication.so --relay-log-recovery=on --loose-group-replication-start-on-boot=off --loose-group-replication-group-name=aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee --loose-group-replication-local-address=node3:33061 --loose-group-replication-group-seeds=node1:33061,node2:33061,node3:33061 --loose-group-replication-single-primary-mode=on --loose-group-replication-enforce-update-everywhere-checks=off --loose-group_replication_bootstrap_group=off
    depends_on:
      mysql80-node1:
        condition: service_healthy

  ladder:
    hostname: ladder
    container_name: ladder
    build:
      context: ../images/ladder/
    ports:
      - :22
    tty: true

  mysql:
    hostname: mysql-client
    build:
      context: ../images/ladder/
    entrypoint: /usr/bin/mysql
    tty: true
    profiles:
      - extra

  mysqlsh:
    hostname: mysql-shell
    build:
      context: ../images/mysqlsh/
    tty: true
    profiles:
      - extra

  initer:
    build:
      context: ../images/ladder/
    volumes:
      - ./initer.d:/initer.d:ro
    entrypoint: /initer-entrypoint.sh
    tty: true
    profiles:
      - extra
